parameters:
  - name: cli_name
    displayName: CLI Name
    type: string

jobs:
  - job: build
    displayName: Build & Publish
    variables:
      is_release: $[and( ne(variables['BuildReason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))]
      is_next: $[and( eq(variables['BuildReason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/main'))]

    steps:
      - checkout: self

      - bash: |
          version="$(grep -i '${{ parameters.cli_name }}_VERSON=' ${{ parameters.cli_name }}/Dockerfile | cut -d= -f2 | cut -d' ' -f1)"
          echo "##vso[task.setvariable variable=cli.version]$version"

          if "$(is_release)" == "true"
          then
            echo "##vso[build.updatebuildnumber]$version"
          elif "$(is_next)" == "true"
          then
            echo "##vso[build.updatebuildnumber]$version - next"
          else
            echo "##vso[build.updatebuildnumber]$version - validation"
          fi

        displayName: Init Variables

      - task: Docker@2
        displayName: Build
        inputs:
          containerRegistry: hub.docker.com
          repository: gstmichel/${{ parameters.cli_name }}
          command: build
          Dockerfile: "**/Dockerfile"
          buildContext: ${{ parameters.cli_name }}
          tags: |
            $(cli.version)
            latest
            next

      - ${{ if eq(variables['BuildReason'], 'PullRequest') }}:
          - task: Docker@2
            displayName: Publish
            inputs:
              containerRegistry: hub.docker.com
              repository: gstmichel/${{ parameters.cli_name }}
              command: push
              tags: |
                next
            condition: $(variables['is_next'])

      - ${{ elseif and(eq(variables['BuildReason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
          - task: Docker@2
            displayName: Publish
            inputs:
              containerRegistry: hub.docker.com
              repository: gstmichel/${{ parameters.cli_name }}
              command: push
              tags: |
                $(cli.version)
                latest
